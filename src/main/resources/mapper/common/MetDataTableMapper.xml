<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigdata.backstage.modules.common.mapper.MetDataTableMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.bigdata.backstage.modules.common.model.MetDataTable">
        <id column="id" property="id"/>
        <result column="dw_id" property="dwId"/>
        <result column="tbl_name" property="tblName"/>
        <result column="tbl_comment" property="tblComment"/>
        <result column="tbl_create_time" property="tblCreateTime"/>
        <result column="tbl_update_time" property="tblUpdateTime"/>
        <result column="is_pt" property="isPt"/>
        <result column="pt_last" property="ptLast"/>
        <result column="tbl_lifecycle" property="tblLifecycle"/>
        <result column="tbl_type" property="tblType"/>
        <result column="tbl_size" property="tblSize"/>
        <result column="tbl_col_num" property="tblColNum"/>
        <result column="all_row_count" property="allRowCount"/>
        <result column="row_count" property="rowCount"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

    <resultMap id="sourceTotalMap" type="com.bigdata.backstage.modules.source.dto.DataSourceTotalDto">
        <id column="tables" property="tables"/>
        <result column="size" property="size"/>
        <result column="rows" property="rows"/>
    </resultMap>

    <resultMap id="sourceTotalHistoryMap" type="com.bigdata.backstage.modules.source.dto.DataSourceHistoryDto">
        <id column="date" property="date"/>
        <id column="ods" property="ods"/>
        <result column="irs" property="irs"/>
        <result column="bms" property="bms"/>
    </resultMap>

    <insert id="syncTableInsert">

        insert into met_data_table(dw_id, tbl_level, index1_name, index2_name, index3_name, tbl_name, tbl_comment,
                                   tbl_create_time, tbl_update_time, is_pt, pt_last,
                                   tbl_lifecycle, tbl_type, tbl_size, tbl_col_num, all_row_count, row_count)
        select #{dwId} as dw_id,
               tbl_level,
               index1_name,
               index2_name,
               index3_name,
               tbl_name,
               tbl_comment,
               tbl_create_time,
               tbl_update_time,
               is_pt,
               pt_last,
               tbl_lifecycle,
               tbl_type,
               tbl_size,
               tbl_col_num,
               all_row_count,
               row_count
        from view_met_data_table t2
        where t2.dw_Id = #{dwId}
          and not exists(select 1 from met_data_table t1 where t1.dw_id = #{dwId} and t1.tbl_name = t2.tbl_name)

    </insert>

    <update id="syncTableUpdate">

        update met_data_table t1
            inner join view_met_data_table t2 on t1.tbl_name = t2.tbl_name
        set t1.tbl_level       =t2.tbl_level,
            t1.index1_name     =t2.index1_name,
            t1.index2_name     =t2.index2_name,
            t1.index3_name     =t2.index3_name,
            t1.tbl_name        =t2.tbl_name,
            t1.tbl_comment     =t2.tbl_comment,
            t1.tbl_create_time =t2.tbl_create_time,
            t1.tbl_update_time =t2.tbl_update_time,
            t1.is_pt           =t2.is_pt,
            t1.pt_last         =t2.pt_last,
            t1.tbl_lifecycle   =t2.tbl_lifecycle,
            t1.tbl_type        =t2.tbl_type,
            t1.tbl_size        =t2.tbl_size,
            t1.tbl_col_num     =t2.tbl_col_num,
            t1.all_row_count   =t2.all_row_count,
            t1.row_count       =t2.row_count
        where t1.dw_Id = #{dwId}
          and t2.dw_id = #{dwId}
    </update>

    <update id="syncTableDelete">

        UPDATE met_data_table t1
        SET is_deleted = 1
        WHERE t1.dw_id = #{dwId}
          and t1.tbl_name not in (select t2.tbl_name from view_met_data_table t2 where t2.dw_Id = #{dwId})
    </update>

    <update id="syncColumnRecover">
        UPDATE met_data_table t1
        SET is_deleted = 0
        WHERE t1.dw_id = #{dwId}
          and t1.tbl_name in (select t2.tbl_name from view_met_data_table t2 where t2.dw_Id = #{dwId})
          and t1.is_deleted = 1;

    </update>


    <select id="selectOdsIndex" resultMap="sourceTotalMap">
        select count(*)                       as tables,
               round(sum(tbl_size) / 1024, 2) as size,
               sum(row_count)                 as `rows`
        from (SELECT tbl_name, tbl_size, row_count
              from ${tableName}
              where dt = (select max(dt) from ${tableName})
                and tbl_level = 'ods'
              GROUP BY tbl_name, tbl_size, row_count) t
    </select>

    <select id="selectOdsHistory" resultType="com.bigdata.backstage.modules.source.dto.DataSourceHistoryDto">
        SELECT DATE_FORMAT(STR_TO_DATE(dt, '%Y%m%d'), '%Y-%m-%d') AS date,
               COUNT(*)                                           AS ods,
               SUM(IF(tbl_name REGEXP '_irs_', 1, 0))             AS irs,
               SUM(IF(tbl_name REGEXP '_bms_|_mysql_|_pr_|_ofl_|_farmer_|_global_|_hh_|hp_|_mz_|_xx_', 1, 0))  AS bms
        FROM (SELECT dt, tbl_name
              FROM ${tableName}
              WHERE tbl_level = 'ods'
              GROUP BY dt, tbl_name) t1
        GROUP BY dt
        ORDER BY dt
        LIMIT #{limit};

    </select>

</mapper>
